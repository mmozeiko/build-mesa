
name: build-mesa

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: windows-2022
    strategy:
      matrix:
        arch: [x64, arm64, x86]

    outputs:
      MESA_VERSION: ${{ steps.build.outputs.MESA_VERSION }}
      LLVM_VERSION: ${{ steps.build.outputs.LLVM_VERSION }}

    steps:

      - name: checkout
        uses: actions/checkout@v4

      - name: build
        id: build
        shell: cmd
        run: call build.cmd ${{ matrix.arch }}

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mesa-${{ matrix.arch }}-${{ steps.build.outputs.MESA_VERSION }}
          path: mesa-*-${{ matrix.arch }}-${{ steps.build.outputs.MESA_VERSION }}.zip
          if-no-files-found: error
          compression-level: 0

  release:
    runs-on: ubuntu-24.04
    needs: build
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:

      - name: release
        run: |
          echo '[mesa ${{ needs.build.outputs.MESA_VERSION }} release notes](https://docs.mesa3d.org/relnotes/${{ needs.build.outputs.MESA_VERSION }}.html)'                     >>notes.txt
          echo '[llvm ${{ needs.build.outputs.LLVM_VERSION }} release notes](https://github.com/llvm/llvm-project/releases/tag/llvmorg-${{ needs.build.outputs.LLVM_VERSION }})' >>notes.txt
          gh release create ${{ needs.build.outputs.MESA_VERSION }} -R "${GITHUB_REPOSITORY}" -t '${{ needs.build.outputs.MESA_VERSION }}' -F notes.txt

      - name: get artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: mesa-*-${{ needs.build.outputs.MESA_VERSION }}
          merge-multiple: true

      - name: upload artifacts
        run: gh release upload '${{ needs.build.outputs.MESA_VERSION }}' mesa-*-${{ needs.build.outputs.MESA_VERSION }}.zip -R "${GITHUB_REPOSITORY}"
